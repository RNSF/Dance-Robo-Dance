[gd_scene load_steps=27 format=2]

[ext_resource path="res://Game/Scenes/Ground/Floor.png" type="Texture" id=1]
[ext_resource path="res://Game/Scenes/Ground/GroundTiles/GroundTile.tscn" type="PackedScene" id=2]
[ext_resource path="res://Game/Scenes/Ground/GroundTiles/DanceFloor/DanceFloorTile.gd" type="Script" id=3]

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D gradient: hint_black;
uniform float start: hint_range(0.0, 1.0);
uniform float end: hint_range(0.0, 1.0);

void fragment(){
	vec4 input_color = texture(TEXTURE, UV);
	vec3 sampled_color = texture(gradient, vec2(UV.y*(end-start)+start, UV.x)).rgb;

	COLOR.rgb = mix(input_color.rgb, sampled_color, 1.0);
	COLOR.a = input_color.a;
}"

[sub_resource type="Gradient" id=14]
offsets = PoolRealArray( 0.00920245, 0.509202, 1 )
colors = PoolColorArray( 0.992157, 0.376471, 0.972549, 1, 0.435294, 0.239216, 0.858824, 1, 0.517647, 0.0431373, 0.67451, 1 )

[sub_resource type="GradientTexture" id=15]
gradient = SubResource( 14 )
width = 1000

[sub_resource type="ShaderMaterial" id=16]
shader = SubResource( 13 )
shader_param/start = 0.0
shader_param/end = 1.0
shader_param/gradient = SubResource( 15 )

[sub_resource type="Shader" id=17]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D gradient: hint_black;
uniform float start: hint_range(0.0, 1.0);
uniform float end: hint_range(0.0, 1.0);

void fragment(){
	vec4 input_color = texture(TEXTURE, UV);
	vec3 sampled_color = texture(gradient, vec2(UV.y*(end-start)+start, UV.x)).rgb;

	COLOR.rgb = mix(input_color.rgb, sampled_color, 1.0);
	COLOR.a = input_color.a;
}"

[sub_resource type="Gradient" id=18]
offsets = PoolRealArray( 0.00920245, 0.509202, 1 )
colors = PoolColorArray( 0.990234, 0.57838, 0.977118, 1, 0.528827, 0.35319, 0.908203, 1, 0.625139, 0.146998, 0.783203, 1 )

[sub_resource type="GradientTexture" id=19]
gradient = SubResource( 18 )
width = 1000

[sub_resource type="ShaderMaterial" id=20]
shader = SubResource( 17 )
shader_param/start = 0.0
shader_param/end = 1.0
shader_param/gradient = SubResource( 19 )

[sub_resource type="Shader" id=21]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D gradient: hint_black;
uniform float start: hint_range(0.0, 1.0);
uniform float end: hint_range(0.0, 1.0);

void fragment(){
	vec4 input_color = texture(TEXTURE, UV);
	vec3 sampled_color = texture(gradient, vec2(UV.y*(end-start)+start, UV.x)).rgb;

	COLOR.rgb = mix(input_color.rgb, sampled_color, 1.0);
	COLOR.a = input_color.a;
}"

[sub_resource type="Gradient" id=22]
offsets = PoolRealArray( 0.00920245, 0.509202, 1 )
colors = PoolColorArray( 0.955078, 0.652493, 0.945441, 1, 0.573956, 0.411977, 0.923828, 1, 0.67411, 0.225938, 0.822266, 1 )

[sub_resource type="GradientTexture" id=23]
gradient = SubResource( 22 )
width = 1000

[sub_resource type="ShaderMaterial" id=24]
shader = SubResource( 21 )
shader_param/start = 0.0
shader_param/end = 1.0
shader_param/gradient = SubResource( 23 )

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D gradient: hint_black;
uniform float start: hint_range(0.0, 1.0);
uniform float end: hint_range(0.0, 1.0);

void fragment(){
	vec4 input_color = texture(TEXTURE, UV);
	vec3 sampled_color = texture(gradient, vec2(UV.y*(end-start)+start, UV.x)).rgb;

	COLOR.rgb = mix(input_color.rgb, sampled_color, 1.0);
	COLOR.a = input_color.a;
}"

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0, 0.496933, 1 )
colors = PoolColorArray( 0.960784, 0.992157, 0.376471, 1, 0.898039, 0.72549, 0.286275, 1, 0.67451, 0.0862745, 0.0431373, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )
width = 1000

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 1 )
shader_param/start = 0.0
shader_param/end = 1.0
shader_param/gradient = SubResource( 8 )

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0.00613497, 0.509202, 0.996933 )
colors = PoolColorArray( 0.909804, 0.639216, 0.286275, 1, 0.898039, 0.286275, 0.286275, 1, 0.533333, 0.152941, 0.4, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 5 )
width = 1000

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/start = 0.0
shader_param/end = 1.0
shader_param/gradient = SubResource( 3 )

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D gradient: hint_black;
uniform float start: hint_range(0.0, 1.0);
uniform float end: hint_range(0.0, 1.0);

void fragment(){
	vec4 input_color = texture(TEXTURE, UV);
	vec3 sampled_color = texture(gradient, vec2(UV.y*(end-start)+start, UV.x)).rgb;

	COLOR.rgb = mix(input_color.rgb, sampled_color, 1.0);
	COLOR.a = input_color.a;
}"

[sub_resource type="Gradient" id=10]
offsets = PoolRealArray( 0.00306748, 0.5, 1 )
colors = PoolColorArray( 0.603922, 0.956863, 0.764706, 1, 0.286275, 0.898039, 0.623529, 1, 0.0431373, 0.67451, 0.662745, 1 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )
width = 1000

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 9 )
shader_param/start = 0.0
shader_param/end = 1.0
shader_param/gradient = SubResource( 11 )

[node name="DanceFloorTile" instance=ExtResource( 2 )]
script = ExtResource( 3 )

[node name="MainSprite" type="Sprite" parent="." index="0"]
material = SubResource( 16 )
texture = ExtResource( 1 )

[node name="Light1Sprite" type="Sprite" parent="." index="1"]
visible = false
material = SubResource( 20 )
texture = ExtResource( 1 )

[node name="Light2Sprite" type="Sprite" parent="." index="2"]
visible = false
material = SubResource( 24 )
texture = ExtResource( 1 )

[node name="YellowSprite" type="Sprite" parent="." index="3"]
visible = false
material = SubResource( 6 )
texture = ExtResource( 1 )

[node name="RedSprite" type="Sprite" parent="." index="4"]
visible = false
material = SubResource( 4 )
texture = ExtResource( 1 )

[node name="GreenSprite" type="Sprite" parent="." index="5"]
visible = false
material = SubResource( 12 )
texture = ExtResource( 1 )
